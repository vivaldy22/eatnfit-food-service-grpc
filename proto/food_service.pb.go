// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.7.1
// source: food_service.proto

package food_proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Food struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FoodId       string `protobuf:"bytes,1,opt,name=food_id,json=foodId,proto3" json:"food_id,omitempty"`
	FoodPortion  string `protobuf:"bytes,2,opt,name=food_portion,json=foodPortion,proto3" json:"food_portion,omitempty"`
	FoodName     string `protobuf:"bytes,3,opt,name=food_name,json=foodName,proto3" json:"food_name,omitempty"`
	FoodCalories string `protobuf:"bytes,4,opt,name=food_calories,json=foodCalories,proto3" json:"food_calories,omitempty"`
	FoodFat      string `protobuf:"bytes,5,opt,name=food_fat,json=foodFat,proto3" json:"food_fat,omitempty"`
	FoodCarbs    string `protobuf:"bytes,6,opt,name=food_carbs,json=foodCarbs,proto3" json:"food_carbs,omitempty"`
	FoodProtein  string `protobuf:"bytes,7,opt,name=food_protein,json=foodProtein,proto3" json:"food_protein,omitempty"`
	FoodPrice    string `protobuf:"bytes,8,opt,name=food_price,json=foodPrice,proto3" json:"food_price,omitempty"`
	FoodDesc     string `protobuf:"bytes,9,opt,name=food_desc,json=foodDesc,proto3" json:"food_desc,omitempty"`
	FoodStatus   string `protobuf:"bytes,10,opt,name=food_status,json=foodStatus,proto3" json:"food_status,omitempty"`
}

func (x *Food) Reset() {
	*x = Food{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Food) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Food) ProtoMessage() {}

func (x *Food) ProtoReflect() protoreflect.Message {
	mi := &file_food_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Food.ProtoReflect.Descriptor instead.
func (*Food) Descriptor() ([]byte, []int) {
	return file_food_service_proto_rawDescGZIP(), []int{0}
}

func (x *Food) GetFoodId() string {
	if x != nil {
		return x.FoodId
	}
	return ""
}

func (x *Food) GetFoodPortion() string {
	if x != nil {
		return x.FoodPortion
	}
	return ""
}

func (x *Food) GetFoodName() string {
	if x != nil {
		return x.FoodName
	}
	return ""
}

func (x *Food) GetFoodCalories() string {
	if x != nil {
		return x.FoodCalories
	}
	return ""
}

func (x *Food) GetFoodFat() string {
	if x != nil {
		return x.FoodFat
	}
	return ""
}

func (x *Food) GetFoodCarbs() string {
	if x != nil {
		return x.FoodCarbs
	}
	return ""
}

func (x *Food) GetFoodProtein() string {
	if x != nil {
		return x.FoodProtein
	}
	return ""
}

func (x *Food) GetFoodPrice() string {
	if x != nil {
		return x.FoodPrice
	}
	return ""
}

func (x *Food) GetFoodDesc() string {
	if x != nil {
		return x.FoodDesc
	}
	return ""
}

func (x *Food) GetFoodStatus() string {
	if x != nil {
		return x.FoodStatus
	}
	return ""
}

type FoodList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Food `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *FoodList) Reset() {
	*x = FoodList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoodList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoodList) ProtoMessage() {}

func (x *FoodList) ProtoReflect() protoreflect.Message {
	mi := &file_food_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoodList.ProtoReflect.Descriptor instead.
func (*FoodList) Descriptor() ([]byte, []int) {
	return file_food_service_proto_rawDescGZIP(), []int{1}
}

func (x *FoodList) GetList() []*Food {
	if x != nil {
		return x.List
	}
	return nil
}

type Packet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketId     string `protobuf:"bytes,1,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	PacketName   string `protobuf:"bytes,2,opt,name=packet_name,json=packetName,proto3" json:"packet_name,omitempty"`
	PacketPrice  string `protobuf:"bytes,3,opt,name=packet_price,json=packetPrice,proto3" json:"packet_price,omitempty"`
	PacketDesc   string `protobuf:"bytes,4,opt,name=packet_desc,json=packetDesc,proto3" json:"packet_desc,omitempty"`
	PacketStatus string `protobuf:"bytes,5,opt,name=packet_status,json=packetStatus,proto3" json:"packet_status,omitempty"`
}

func (x *Packet) Reset() {
	*x = Packet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_food_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_food_service_proto_rawDescGZIP(), []int{2}
}

func (x *Packet) GetPacketId() string {
	if x != nil {
		return x.PacketId
	}
	return ""
}

func (x *Packet) GetPacketName() string {
	if x != nil {
		return x.PacketName
	}
	return ""
}

func (x *Packet) GetPacketPrice() string {
	if x != nil {
		return x.PacketPrice
	}
	return ""
}

func (x *Packet) GetPacketDesc() string {
	if x != nil {
		return x.PacketDesc
	}
	return ""
}

func (x *Packet) GetPacketStatus() string {
	if x != nil {
		return x.PacketStatus
	}
	return ""
}

type PacketAndMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PmId     string `protobuf:"bytes,1,opt,name=pm_id,json=pmId,proto3" json:"pm_id,omitempty"`
	PacketId string `protobuf:"bytes,2,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	MenuId   string `protobuf:"bytes,3,opt,name=menu_id,json=menuId,proto3" json:"menu_id,omitempty"`
	PmStatus string `protobuf:"bytes,4,opt,name=pm_status,json=pmStatus,proto3" json:"pm_status,omitempty"`
}

func (x *PacketAndMenu) Reset() {
	*x = PacketAndMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketAndMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketAndMenu) ProtoMessage() {}

func (x *PacketAndMenu) ProtoReflect() protoreflect.Message {
	mi := &file_food_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketAndMenu.ProtoReflect.Descriptor instead.
func (*PacketAndMenu) Descriptor() ([]byte, []int) {
	return file_food_service_proto_rawDescGZIP(), []int{3}
}

func (x *PacketAndMenu) GetPmId() string {
	if x != nil {
		return x.PmId
	}
	return ""
}

func (x *PacketAndMenu) GetPacketId() string {
	if x != nil {
		return x.PacketId
	}
	return ""
}

func (x *PacketAndMenu) GetMenuId() string {
	if x != nil {
		return x.MenuId
	}
	return ""
}

func (x *PacketAndMenu) GetPmStatus() string {
	if x != nil {
		return x.PmStatus
	}
	return ""
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransId   string `protobuf:"bytes,1,opt,name=trans_id,json=transId,proto3" json:"trans_id,omitempty"`
	TransDate string `protobuf:"bytes,2,opt,name=trans_date,json=transDate,proto3" json:"trans_date,omitempty"`
	UserId    string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PacketId  string `protobuf:"bytes,4,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	Portion   string `protobuf:"bytes,5,opt,name=portion,proto3" json:"portion,omitempty"`
	StartDate string `protobuf:"bytes,6,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   string `protobuf:"bytes,7,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	StartTime string `protobuf:"bytes,8,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Address   string `protobuf:"bytes,9,opt,name=address,proto3" json:"address,omitempty"`
	PaymentId string `protobuf:"bytes,10,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_food_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_food_service_proto_rawDescGZIP(), []int{4}
}

func (x *Transaction) GetTransId() string {
	if x != nil {
		return x.TransId
	}
	return ""
}

func (x *Transaction) GetTransDate() string {
	if x != nil {
		return x.TransDate
	}
	return ""
}

func (x *Transaction) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Transaction) GetPacketId() string {
	if x != nil {
		return x.PacketId
	}
	return ""
}

func (x *Transaction) GetPortion() string {
	if x != nil {
		return x.Portion
	}
	return ""
}

func (x *Transaction) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *Transaction) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *Transaction) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Transaction) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Transaction) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

type TransactionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Transaction `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *TransactionList) Reset() {
	*x = TransactionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionList) ProtoMessage() {}

func (x *TransactionList) ProtoReflect() protoreflect.Message {
	mi := &file_food_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionList.ProtoReflect.Descriptor instead.
func (*TransactionList) Descriptor() ([]byte, []int) {
	return file_food_service_proto_rawDescGZIP(), []int{5}
}

func (x *TransactionList) GetList() []*Transaction {
	if x != nil {
		return x.List
	}
	return nil
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId     string `protobuf:"bytes,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	PaymentName   string `protobuf:"bytes,2,opt,name=payment_name,json=paymentName,proto3" json:"payment_name,omitempty"`
	PaymentStatus string `protobuf:"bytes,3,opt,name=payment_status,json=paymentStatus,proto3" json:"payment_status,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_food_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_food_service_proto_rawDescGZIP(), []int{6}
}

func (x *Payment) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *Payment) GetPaymentName() string {
	if x != nil {
		return x.PaymentName
	}
	return ""
}

func (x *Payment) GetPaymentStatus() string {
	if x != nil {
		return x.PaymentStatus
	}
	return ""
}

type DetailPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packet   *Packet `protobuf:"bytes,1,opt,name=packet,proto3" json:"packet,omitempty"`
	ListFood []*Food `protobuf:"bytes,2,rep,name=list_food,json=listFood,proto3" json:"list_food,omitempty"`
}

func (x *DetailPacket) Reset() {
	*x = DetailPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailPacket) ProtoMessage() {}

func (x *DetailPacket) ProtoReflect() protoreflect.Message {
	mi := &file_food_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailPacket.ProtoReflect.Descriptor instead.
func (*DetailPacket) Descriptor() ([]byte, []int) {
	return file_food_service_proto_rawDescGZIP(), []int{7}
}

func (x *DetailPacket) GetPacket() *Packet {
	if x != nil {
		return x.Packet
	}
	return nil
}

func (x *DetailPacket) GetListFood() []*Food {
	if x != nil {
		return x.ListFood
	}
	return nil
}

type PacketList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Packet `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PacketList) Reset() {
	*x = PacketList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketList) ProtoMessage() {}

func (x *PacketList) ProtoReflect() protoreflect.Message {
	mi := &file_food_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketList.ProtoReflect.Descriptor instead.
func (*PacketList) Descriptor() ([]byte, []int) {
	return file_food_service_proto_rawDescGZIP(), []int{8}
}

func (x *PacketList) GetList() []*Packet {
	if x != nil {
		return x.List
	}
	return nil
}

type FoodID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FoodId string `protobuf:"bytes,1,opt,name=food_id,json=foodId,proto3" json:"food_id,omitempty"`
}

func (x *FoodID) Reset() {
	*x = FoodID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoodID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoodID) ProtoMessage() {}

func (x *FoodID) ProtoReflect() protoreflect.Message {
	mi := &file_food_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoodID.ProtoReflect.Descriptor instead.
func (*FoodID) Descriptor() ([]byte, []int) {
	return file_food_service_proto_rawDescGZIP(), []int{9}
}

func (x *FoodID) GetFoodId() string {
	if x != nil {
		return x.FoodId
	}
	return ""
}

type DetailPacketInsert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packet   *Packet   `protobuf:"bytes,1,opt,name=packet,proto3" json:"packet,omitempty"`
	ListFood []*FoodID `protobuf:"bytes,2,rep,name=list_food,json=listFood,proto3" json:"list_food,omitempty"`
}

func (x *DetailPacketInsert) Reset() {
	*x = DetailPacketInsert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailPacketInsert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailPacketInsert) ProtoMessage() {}

func (x *DetailPacketInsert) ProtoReflect() protoreflect.Message {
	mi := &file_food_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailPacketInsert.ProtoReflect.Descriptor instead.
func (*DetailPacketInsert) Descriptor() ([]byte, []int) {
	return file_food_service_proto_rawDescGZIP(), []int{10}
}

func (x *DetailPacketInsert) GetPacket() *Packet {
	if x != nil {
		return x.Packet
	}
	return nil
}

func (x *DetailPacketInsert) GetListFood() []*FoodID {
	if x != nil {
		return x.ListFood
	}
	return nil
}

type ID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ID) Reset() {
	*x = ID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ID) ProtoMessage() {}

func (x *ID) ProtoReflect() protoreflect.Message {
	mi := &file_food_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ID.ProtoReflect.Descriptor instead.
func (*ID) Descriptor() ([]byte, []int) {
	return file_food_service_proto_rawDescGZIP(), []int{11}
}

func (x *ID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FoodUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   *ID   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Food *Food `protobuf:"bytes,2,opt,name=food,proto3" json:"food,omitempty"`
}

func (x *FoodUpdateRequest) Reset() {
	*x = FoodUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoodUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoodUpdateRequest) ProtoMessage() {}

func (x *FoodUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_food_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoodUpdateRequest.ProtoReflect.Descriptor instead.
func (*FoodUpdateRequest) Descriptor() ([]byte, []int) {
	return file_food_service_proto_rawDescGZIP(), []int{12}
}

func (x *FoodUpdateRequest) GetId() *ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *FoodUpdateRequest) GetFood() *Food {
	if x != nil {
		return x.Food
	}
	return nil
}

type DetailPacketUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *ID                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Packet *DetailPacketInsert `protobuf:"bytes,2,opt,name=packet,proto3" json:"packet,omitempty"`
}

func (x *DetailPacketUpdateRequest) Reset() {
	*x = DetailPacketUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailPacketUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailPacketUpdateRequest) ProtoMessage() {}

func (x *DetailPacketUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_food_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailPacketUpdateRequest.ProtoReflect.Descriptor instead.
func (*DetailPacketUpdateRequest) Descriptor() ([]byte, []int) {
	return file_food_service_proto_rawDescGZIP(), []int{13}
}

func (x *DetailPacketUpdateRequest) GetId() *ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *DetailPacketUpdateRequest) GetPacket() *DetailPacketInsert {
	if x != nil {
		return x.Packet
	}
	return nil
}

type TransactionUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *ID          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Transaction *Transaction `protobuf:"bytes,2,opt,name=transaction,proto3" json:"transaction,omitempty"`
}

func (x *TransactionUpdateRequest) Reset() {
	*x = TransactionUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionUpdateRequest) ProtoMessage() {}

func (x *TransactionUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_food_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionUpdateRequest.ProtoReflect.Descriptor instead.
func (*TransactionUpdateRequest) Descriptor() ([]byte, []int) {
	return file_food_service_proto_rawDescGZIP(), []int{14}
}

func (x *TransactionUpdateRequest) GetId() *ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TransactionUpdateRequest) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    string `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit   string `protobuf:"bytes,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Keyword string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_food_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_food_service_proto_rawDescGZIP(), []int{15}
}

func (x *Pagination) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *Pagination) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *Pagination) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type Total struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalData string `protobuf:"bytes,1,opt,name=total_data,json=totalData,proto3" json:"total_data,omitempty"`
}

func (x *Total) Reset() {
	*x = Total{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Total) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Total) ProtoMessage() {}

func (x *Total) ProtoReflect() protoreflect.Message {
	mi := &file_food_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Total.ProtoReflect.Descriptor instead.
func (*Total) Descriptor() ([]byte, []int) {
	return file_food_service_proto_rawDescGZIP(), []int{16}
}

func (x *Total) GetTotalData() string {
	if x != nil {
		return x.TotalData
	}
	return ""
}

var File_food_service_proto protoreflect.FileDescriptor

var file_food_service_proto_rawDesc = []byte{
	0x0a, 0x12, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbe, 0x02,
	0x0a, 0x04, 0x46, 0x6f, 0x6f, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x6f, 0x64, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x6f, 0x6f, 0x64, 0x50, 0x6f, 0x72, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x63, 0x61, 0x6c, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x6f, 0x6f, 0x64, 0x43, 0x61, 0x6c, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x66, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6f, 0x6f, 0x64, 0x46, 0x61, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x62, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x6f, 0x64, 0x43, 0x61, 0x72, 0x62, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x69, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x69,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a,
	0x0b, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x30,
	0x0a, 0x08, 0x46, 0x6f, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x6f, 0x64, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xaf, 0x01, 0x0a, 0x06, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x77, 0x0a, 0x0d, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x6e, 0x64, 0x4d,
	0x65, 0x6e, 0x75, 0x12, 0x13, 0x0a, 0x05, 0x70, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa9, 0x02, 0x0a, 0x0b,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x44, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x72, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x69, 0x0a, 0x0c, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6f,
	0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x66, 0x6f, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x6f, 0x6f,
	0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x6f, 0x64, 0x52, 0x08, 0x6c, 0x69,
	0x73, 0x74, 0x46, 0x6f, 0x6f, 0x64, 0x22, 0x34, 0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x21, 0x0a, 0x06,
	0x46, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x6f, 0x64, 0x49, 0x64, 0x22,
	0x71, 0x0a, 0x12, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x2f, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x66, 0x6f, 0x6f, 0x64, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x46, 0x6f, 0x6f, 0x64, 0x49, 0x44, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x46, 0x6f,
	0x6f, 0x64, 0x22, 0x14, 0x0a, 0x02, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x59, 0x0a, 0x11, 0x46, 0x6f, 0x6f, 0x64,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66, 0x6f, 0x6f, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a,
	0x04, 0x66, 0x6f, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x6f,
	0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x6f, 0x64, 0x52, 0x04, 0x66,
	0x6f, 0x6f, 0x64, 0x22, 0x73, 0x0a, 0x19, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x66,
	0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x36, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x75, 0x0a, 0x18, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x6f, 0x6f, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x50, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x26, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x32, 0xc1, 0x02, 0x0a, 0x08, 0x46, 0x6f,
	0x6f, 0x64, 0x43, 0x52, 0x55, 0x44, 0x12, 0x36, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x12, 0x16, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x14, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x35,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x11, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x12, 0x0e, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x44,
	0x1a, 0x10, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f,
	0x6f, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x66,
	0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x6f, 0x64, 0x1a, 0x10,
	0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x6f, 0x64,
	0x12, 0x39, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x66, 0x6f, 0x6f,
	0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x66, 0x6f, 0x6f, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x6f, 0x6f, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x49, 0x44, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xff, 0x02,
	0x0a, 0x0a, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x52, 0x55, 0x44, 0x12, 0x38, 0x0a, 0x06,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x16, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x16,
	0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x66, 0x6f, 0x6f,
	0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x33, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x0e, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x44, 0x1a, 0x18, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x48, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x66,
	0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x1a, 0x1e, 0x2e, 0x66,
	0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x12, 0x4f, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x12, 0x30, 0x0a,
	0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x44, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32,
	0xf2, 0x02, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x52, 0x55, 0x44, 0x12, 0x3d, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x0e, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x49, 0x44, 0x1a, 0x17, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x17, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x66, 0x6f, 0x6f, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x66,
	0x6f, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x44, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_food_service_proto_rawDescOnce sync.Once
	file_food_service_proto_rawDescData = file_food_service_proto_rawDesc
)

func file_food_service_proto_rawDescGZIP() []byte {
	file_food_service_proto_rawDescOnce.Do(func() {
		file_food_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_food_service_proto_rawDescData)
	})
	return file_food_service_proto_rawDescData
}

var file_food_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_food_service_proto_goTypes = []interface{}{
	(*Food)(nil),                      // 0: food_proto.Food
	(*FoodList)(nil),                  // 1: food_proto.FoodList
	(*Packet)(nil),                    // 2: food_proto.Packet
	(*PacketAndMenu)(nil),             // 3: food_proto.PacketAndMenu
	(*Transaction)(nil),               // 4: food_proto.Transaction
	(*TransactionList)(nil),           // 5: food_proto.TransactionList
	(*Payment)(nil),                   // 6: food_proto.Payment
	(*DetailPacket)(nil),              // 7: food_proto.DetailPacket
	(*PacketList)(nil),                // 8: food_proto.PacketList
	(*FoodID)(nil),                    // 9: food_proto.FoodID
	(*DetailPacketInsert)(nil),        // 10: food_proto.DetailPacketInsert
	(*ID)(nil),                        // 11: food_proto.ID
	(*FoodUpdateRequest)(nil),         // 12: food_proto.FoodUpdateRequest
	(*DetailPacketUpdateRequest)(nil), // 13: food_proto.DetailPacketUpdateRequest
	(*TransactionUpdateRequest)(nil),  // 14: food_proto.TransactionUpdateRequest
	(*Pagination)(nil),                // 15: food_proto.Pagination
	(*Total)(nil),                     // 16: food_proto.Total
	(*empty.Empty)(nil),               // 17: google.protobuf.Empty
}
var file_food_service_proto_depIdxs = []int32{
	0,  // 0: food_proto.FoodList.list:type_name -> food_proto.Food
	4,  // 1: food_proto.TransactionList.list:type_name -> food_proto.Transaction
	2,  // 2: food_proto.DetailPacket.packet:type_name -> food_proto.Packet
	0,  // 3: food_proto.DetailPacket.list_food:type_name -> food_proto.Food
	2,  // 4: food_proto.PacketList.list:type_name -> food_proto.Packet
	2,  // 5: food_proto.DetailPacketInsert.packet:type_name -> food_proto.Packet
	9,  // 6: food_proto.DetailPacketInsert.list_food:type_name -> food_proto.FoodID
	11, // 7: food_proto.FoodUpdateRequest.id:type_name -> food_proto.ID
	0,  // 8: food_proto.FoodUpdateRequest.food:type_name -> food_proto.Food
	11, // 9: food_proto.DetailPacketUpdateRequest.id:type_name -> food_proto.ID
	10, // 10: food_proto.DetailPacketUpdateRequest.packet:type_name -> food_proto.DetailPacketInsert
	11, // 11: food_proto.TransactionUpdateRequest.id:type_name -> food_proto.ID
	4,  // 12: food_proto.TransactionUpdateRequest.transaction:type_name -> food_proto.Transaction
	15, // 13: food_proto.FoodCRUD.GetAll:input_type -> food_proto.Pagination
	17, // 14: food_proto.FoodCRUD.GetTotal:input_type -> google.protobuf.Empty
	11, // 15: food_proto.FoodCRUD.GetByID:input_type -> food_proto.ID
	0,  // 16: food_proto.FoodCRUD.Create:input_type -> food_proto.Food
	12, // 17: food_proto.FoodCRUD.Update:input_type -> food_proto.FoodUpdateRequest
	11, // 18: food_proto.FoodCRUD.Delete:input_type -> food_proto.ID
	15, // 19: food_proto.PacketCRUD.GetAll:input_type -> food_proto.Pagination
	17, // 20: food_proto.PacketCRUD.GetTotal:input_type -> google.protobuf.Empty
	11, // 21: food_proto.PacketCRUD.GetByID:input_type -> food_proto.ID
	10, // 22: food_proto.PacketCRUD.Create:input_type -> food_proto.DetailPacketInsert
	13, // 23: food_proto.PacketCRUD.Update:input_type -> food_proto.DetailPacketUpdateRequest
	11, // 24: food_proto.PacketCRUD.Delete:input_type -> food_proto.ID
	17, // 25: food_proto.TransactionCRUD.GetAll:input_type -> google.protobuf.Empty
	17, // 26: food_proto.TransactionCRUD.GetTotal:input_type -> google.protobuf.Empty
	11, // 27: food_proto.TransactionCRUD.GetByID:input_type -> food_proto.ID
	4,  // 28: food_proto.TransactionCRUD.Create:input_type -> food_proto.Transaction
	14, // 29: food_proto.TransactionCRUD.Update:input_type -> food_proto.TransactionUpdateRequest
	11, // 30: food_proto.TransactionCRUD.Delete:input_type -> food_proto.ID
	1,  // 31: food_proto.FoodCRUD.GetAll:output_type -> food_proto.FoodList
	16, // 32: food_proto.FoodCRUD.GetTotal:output_type -> food_proto.Total
	0,  // 33: food_proto.FoodCRUD.GetByID:output_type -> food_proto.Food
	0,  // 34: food_proto.FoodCRUD.Create:output_type -> food_proto.Food
	0,  // 35: food_proto.FoodCRUD.Update:output_type -> food_proto.Food
	17, // 36: food_proto.FoodCRUD.Delete:output_type -> google.protobuf.Empty
	8,  // 37: food_proto.PacketCRUD.GetAll:output_type -> food_proto.PacketList
	16, // 38: food_proto.PacketCRUD.GetTotal:output_type -> food_proto.Total
	7,  // 39: food_proto.PacketCRUD.GetByID:output_type -> food_proto.DetailPacket
	10, // 40: food_proto.PacketCRUD.Create:output_type -> food_proto.DetailPacketInsert
	10, // 41: food_proto.PacketCRUD.Update:output_type -> food_proto.DetailPacketInsert
	17, // 42: food_proto.PacketCRUD.Delete:output_type -> google.protobuf.Empty
	5,  // 43: food_proto.TransactionCRUD.GetAll:output_type -> food_proto.TransactionList
	16, // 44: food_proto.TransactionCRUD.GetTotal:output_type -> food_proto.Total
	4,  // 45: food_proto.TransactionCRUD.GetByID:output_type -> food_proto.Transaction
	4,  // 46: food_proto.TransactionCRUD.Create:output_type -> food_proto.Transaction
	4,  // 47: food_proto.TransactionCRUD.Update:output_type -> food_proto.Transaction
	17, // 48: food_proto.TransactionCRUD.Delete:output_type -> google.protobuf.Empty
	31, // [31:49] is the sub-list for method output_type
	13, // [13:31] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_food_service_proto_init() }
func file_food_service_proto_init() {
	if File_food_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_food_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Food); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoodList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Packet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketAndMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoodID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailPacketInsert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoodUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailPacketUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Total); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_food_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_food_service_proto_goTypes,
		DependencyIndexes: file_food_service_proto_depIdxs,
		MessageInfos:      file_food_service_proto_msgTypes,
	}.Build()
	File_food_service_proto = out.File
	file_food_service_proto_rawDesc = nil
	file_food_service_proto_goTypes = nil
	file_food_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FoodCRUDClient is the client API for FoodCRUD service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FoodCRUDClient interface {
	GetAll(ctx context.Context, in *Pagination, opts ...grpc.CallOption) (*FoodList, error)
	GetTotal(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Total, error)
	GetByID(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Food, error)
	Create(ctx context.Context, in *Food, opts ...grpc.CallOption) (*Food, error)
	Update(ctx context.Context, in *FoodUpdateRequest, opts ...grpc.CallOption) (*Food, error)
	Delete(ctx context.Context, in *ID, opts ...grpc.CallOption) (*empty.Empty, error)
}

type foodCRUDClient struct {
	cc grpc.ClientConnInterface
}

func NewFoodCRUDClient(cc grpc.ClientConnInterface) FoodCRUDClient {
	return &foodCRUDClient{cc}
}

func (c *foodCRUDClient) GetAll(ctx context.Context, in *Pagination, opts ...grpc.CallOption) (*FoodList, error) {
	out := new(FoodList)
	err := c.cc.Invoke(ctx, "/food_proto.FoodCRUD/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *foodCRUDClient) GetTotal(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Total, error) {
	out := new(Total)
	err := c.cc.Invoke(ctx, "/food_proto.FoodCRUD/GetTotal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *foodCRUDClient) GetByID(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Food, error) {
	out := new(Food)
	err := c.cc.Invoke(ctx, "/food_proto.FoodCRUD/GetByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *foodCRUDClient) Create(ctx context.Context, in *Food, opts ...grpc.CallOption) (*Food, error) {
	out := new(Food)
	err := c.cc.Invoke(ctx, "/food_proto.FoodCRUD/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *foodCRUDClient) Update(ctx context.Context, in *FoodUpdateRequest, opts ...grpc.CallOption) (*Food, error) {
	out := new(Food)
	err := c.cc.Invoke(ctx, "/food_proto.FoodCRUD/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *foodCRUDClient) Delete(ctx context.Context, in *ID, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/food_proto.FoodCRUD/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FoodCRUDServer is the server API for FoodCRUD service.
type FoodCRUDServer interface {
	GetAll(context.Context, *Pagination) (*FoodList, error)
	GetTotal(context.Context, *empty.Empty) (*Total, error)
	GetByID(context.Context, *ID) (*Food, error)
	Create(context.Context, *Food) (*Food, error)
	Update(context.Context, *FoodUpdateRequest) (*Food, error)
	Delete(context.Context, *ID) (*empty.Empty, error)
}

// UnimplementedFoodCRUDServer can be embedded to have forward compatible implementations.
type UnimplementedFoodCRUDServer struct {
}

func (*UnimplementedFoodCRUDServer) GetAll(context.Context, *Pagination) (*FoodList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedFoodCRUDServer) GetTotal(context.Context, *empty.Empty) (*Total, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTotal not implemented")
}
func (*UnimplementedFoodCRUDServer) GetByID(context.Context, *ID) (*Food, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByID not implemented")
}
func (*UnimplementedFoodCRUDServer) Create(context.Context, *Food) (*Food, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedFoodCRUDServer) Update(context.Context, *FoodUpdateRequest) (*Food, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedFoodCRUDServer) Delete(context.Context, *ID) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterFoodCRUDServer(s *grpc.Server, srv FoodCRUDServer) {
	s.RegisterService(&_FoodCRUD_serviceDesc, srv)
}

func _FoodCRUD_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Pagination)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FoodCRUDServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food_proto.FoodCRUD/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FoodCRUDServer).GetAll(ctx, req.(*Pagination))
	}
	return interceptor(ctx, in, info, handler)
}

func _FoodCRUD_GetTotal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FoodCRUDServer).GetTotal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food_proto.FoodCRUD/GetTotal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FoodCRUDServer).GetTotal(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _FoodCRUD_GetByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FoodCRUDServer).GetByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food_proto.FoodCRUD/GetByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FoodCRUDServer).GetByID(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _FoodCRUD_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Food)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FoodCRUDServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food_proto.FoodCRUD/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FoodCRUDServer).Create(ctx, req.(*Food))
	}
	return interceptor(ctx, in, info, handler)
}

func _FoodCRUD_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FoodUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FoodCRUDServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food_proto.FoodCRUD/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FoodCRUDServer).Update(ctx, req.(*FoodUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FoodCRUD_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FoodCRUDServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food_proto.FoodCRUD/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FoodCRUDServer).Delete(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _FoodCRUD_serviceDesc = grpc.ServiceDesc{
	ServiceName: "food_proto.FoodCRUD",
	HandlerType: (*FoodCRUDServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAll",
			Handler:    _FoodCRUD_GetAll_Handler,
		},
		{
			MethodName: "GetTotal",
			Handler:    _FoodCRUD_GetTotal_Handler,
		},
		{
			MethodName: "GetByID",
			Handler:    _FoodCRUD_GetByID_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _FoodCRUD_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _FoodCRUD_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _FoodCRUD_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "food_service.proto",
}

// PacketCRUDClient is the client API for PacketCRUD service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PacketCRUDClient interface {
	GetAll(ctx context.Context, in *Pagination, opts ...grpc.CallOption) (*PacketList, error)
	GetTotal(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Total, error)
	GetByID(ctx context.Context, in *ID, opts ...grpc.CallOption) (*DetailPacket, error)
	Create(ctx context.Context, in *DetailPacketInsert, opts ...grpc.CallOption) (*DetailPacketInsert, error)
	Update(ctx context.Context, in *DetailPacketUpdateRequest, opts ...grpc.CallOption) (*DetailPacketInsert, error)
	Delete(ctx context.Context, in *ID, opts ...grpc.CallOption) (*empty.Empty, error)
}

type packetCRUDClient struct {
	cc grpc.ClientConnInterface
}

func NewPacketCRUDClient(cc grpc.ClientConnInterface) PacketCRUDClient {
	return &packetCRUDClient{cc}
}

func (c *packetCRUDClient) GetAll(ctx context.Context, in *Pagination, opts ...grpc.CallOption) (*PacketList, error) {
	out := new(PacketList)
	err := c.cc.Invoke(ctx, "/food_proto.PacketCRUD/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *packetCRUDClient) GetTotal(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Total, error) {
	out := new(Total)
	err := c.cc.Invoke(ctx, "/food_proto.PacketCRUD/GetTotal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *packetCRUDClient) GetByID(ctx context.Context, in *ID, opts ...grpc.CallOption) (*DetailPacket, error) {
	out := new(DetailPacket)
	err := c.cc.Invoke(ctx, "/food_proto.PacketCRUD/GetByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *packetCRUDClient) Create(ctx context.Context, in *DetailPacketInsert, opts ...grpc.CallOption) (*DetailPacketInsert, error) {
	out := new(DetailPacketInsert)
	err := c.cc.Invoke(ctx, "/food_proto.PacketCRUD/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *packetCRUDClient) Update(ctx context.Context, in *DetailPacketUpdateRequest, opts ...grpc.CallOption) (*DetailPacketInsert, error) {
	out := new(DetailPacketInsert)
	err := c.cc.Invoke(ctx, "/food_proto.PacketCRUD/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *packetCRUDClient) Delete(ctx context.Context, in *ID, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/food_proto.PacketCRUD/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PacketCRUDServer is the server API for PacketCRUD service.
type PacketCRUDServer interface {
	GetAll(context.Context, *Pagination) (*PacketList, error)
	GetTotal(context.Context, *empty.Empty) (*Total, error)
	GetByID(context.Context, *ID) (*DetailPacket, error)
	Create(context.Context, *DetailPacketInsert) (*DetailPacketInsert, error)
	Update(context.Context, *DetailPacketUpdateRequest) (*DetailPacketInsert, error)
	Delete(context.Context, *ID) (*empty.Empty, error)
}

// UnimplementedPacketCRUDServer can be embedded to have forward compatible implementations.
type UnimplementedPacketCRUDServer struct {
}

func (*UnimplementedPacketCRUDServer) GetAll(context.Context, *Pagination) (*PacketList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedPacketCRUDServer) GetTotal(context.Context, *empty.Empty) (*Total, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTotal not implemented")
}
func (*UnimplementedPacketCRUDServer) GetByID(context.Context, *ID) (*DetailPacket, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByID not implemented")
}
func (*UnimplementedPacketCRUDServer) Create(context.Context, *DetailPacketInsert) (*DetailPacketInsert, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedPacketCRUDServer) Update(context.Context, *DetailPacketUpdateRequest) (*DetailPacketInsert, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedPacketCRUDServer) Delete(context.Context, *ID) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterPacketCRUDServer(s *grpc.Server, srv PacketCRUDServer) {
	s.RegisterService(&_PacketCRUD_serviceDesc, srv)
}

func _PacketCRUD_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Pagination)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PacketCRUDServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food_proto.PacketCRUD/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PacketCRUDServer).GetAll(ctx, req.(*Pagination))
	}
	return interceptor(ctx, in, info, handler)
}

func _PacketCRUD_GetTotal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PacketCRUDServer).GetTotal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food_proto.PacketCRUD/GetTotal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PacketCRUDServer).GetTotal(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PacketCRUD_GetByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PacketCRUDServer).GetByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food_proto.PacketCRUD/GetByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PacketCRUDServer).GetByID(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PacketCRUD_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetailPacketInsert)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PacketCRUDServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food_proto.PacketCRUD/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PacketCRUDServer).Create(ctx, req.(*DetailPacketInsert))
	}
	return interceptor(ctx, in, info, handler)
}

func _PacketCRUD_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetailPacketUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PacketCRUDServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food_proto.PacketCRUD/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PacketCRUDServer).Update(ctx, req.(*DetailPacketUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PacketCRUD_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PacketCRUDServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food_proto.PacketCRUD/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PacketCRUDServer).Delete(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _PacketCRUD_serviceDesc = grpc.ServiceDesc{
	ServiceName: "food_proto.PacketCRUD",
	HandlerType: (*PacketCRUDServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAll",
			Handler:    _PacketCRUD_GetAll_Handler,
		},
		{
			MethodName: "GetTotal",
			Handler:    _PacketCRUD_GetTotal_Handler,
		},
		{
			MethodName: "GetByID",
			Handler:    _PacketCRUD_GetByID_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _PacketCRUD_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _PacketCRUD_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _PacketCRUD_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "food_service.proto",
}

// TransactionCRUDClient is the client API for TransactionCRUD service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransactionCRUDClient interface {
	GetAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TransactionList, error)
	GetTotal(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Total, error)
	GetByID(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Transaction, error)
	Create(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*Transaction, error)
	Update(ctx context.Context, in *TransactionUpdateRequest, opts ...grpc.CallOption) (*Transaction, error)
	Delete(ctx context.Context, in *ID, opts ...grpc.CallOption) (*empty.Empty, error)
}

type transactionCRUDClient struct {
	cc grpc.ClientConnInterface
}

func NewTransactionCRUDClient(cc grpc.ClientConnInterface) TransactionCRUDClient {
	return &transactionCRUDClient{cc}
}

func (c *transactionCRUDClient) GetAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*TransactionList, error) {
	out := new(TransactionList)
	err := c.cc.Invoke(ctx, "/food_proto.TransactionCRUD/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionCRUDClient) GetTotal(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Total, error) {
	out := new(Total)
	err := c.cc.Invoke(ctx, "/food_proto.TransactionCRUD/GetTotal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionCRUDClient) GetByID(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Transaction, error) {
	out := new(Transaction)
	err := c.cc.Invoke(ctx, "/food_proto.TransactionCRUD/GetByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionCRUDClient) Create(ctx context.Context, in *Transaction, opts ...grpc.CallOption) (*Transaction, error) {
	out := new(Transaction)
	err := c.cc.Invoke(ctx, "/food_proto.TransactionCRUD/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionCRUDClient) Update(ctx context.Context, in *TransactionUpdateRequest, opts ...grpc.CallOption) (*Transaction, error) {
	out := new(Transaction)
	err := c.cc.Invoke(ctx, "/food_proto.TransactionCRUD/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionCRUDClient) Delete(ctx context.Context, in *ID, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/food_proto.TransactionCRUD/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransactionCRUDServer is the server API for TransactionCRUD service.
type TransactionCRUDServer interface {
	GetAll(context.Context, *empty.Empty) (*TransactionList, error)
	GetTotal(context.Context, *empty.Empty) (*Total, error)
	GetByID(context.Context, *ID) (*Transaction, error)
	Create(context.Context, *Transaction) (*Transaction, error)
	Update(context.Context, *TransactionUpdateRequest) (*Transaction, error)
	Delete(context.Context, *ID) (*empty.Empty, error)
}

// UnimplementedTransactionCRUDServer can be embedded to have forward compatible implementations.
type UnimplementedTransactionCRUDServer struct {
}

func (*UnimplementedTransactionCRUDServer) GetAll(context.Context, *empty.Empty) (*TransactionList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedTransactionCRUDServer) GetTotal(context.Context, *empty.Empty) (*Total, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTotal not implemented")
}
func (*UnimplementedTransactionCRUDServer) GetByID(context.Context, *ID) (*Transaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByID not implemented")
}
func (*UnimplementedTransactionCRUDServer) Create(context.Context, *Transaction) (*Transaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedTransactionCRUDServer) Update(context.Context, *TransactionUpdateRequest) (*Transaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedTransactionCRUDServer) Delete(context.Context, *ID) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterTransactionCRUDServer(s *grpc.Server, srv TransactionCRUDServer) {
	s.RegisterService(&_TransactionCRUD_serviceDesc, srv)
}

func _TransactionCRUD_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionCRUDServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food_proto.TransactionCRUD/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionCRUDServer).GetAll(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionCRUD_GetTotal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionCRUDServer).GetTotal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food_proto.TransactionCRUD/GetTotal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionCRUDServer).GetTotal(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionCRUD_GetByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionCRUDServer).GetByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food_proto.TransactionCRUD/GetByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionCRUDServer).GetByID(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionCRUD_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Transaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionCRUDServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food_proto.TransactionCRUD/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionCRUDServer).Create(ctx, req.(*Transaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionCRUD_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionCRUDServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food_proto.TransactionCRUD/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionCRUDServer).Update(ctx, req.(*TransactionUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionCRUD_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionCRUDServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food_proto.TransactionCRUD/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionCRUDServer).Delete(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _TransactionCRUD_serviceDesc = grpc.ServiceDesc{
	ServiceName: "food_proto.TransactionCRUD",
	HandlerType: (*TransactionCRUDServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAll",
			Handler:    _TransactionCRUD_GetAll_Handler,
		},
		{
			MethodName: "GetTotal",
			Handler:    _TransactionCRUD_GetTotal_Handler,
		},
		{
			MethodName: "GetByID",
			Handler:    _TransactionCRUD_GetByID_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _TransactionCRUD_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _TransactionCRUD_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _TransactionCRUD_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "food_service.proto",
}
