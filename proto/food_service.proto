syntax = "proto3";

package food_proto;

import "google/protobuf/empty.proto";

message Food {
  string food_id = 1;
  string food_portion = 2;
  string food_name = 3;
  string food_calories = 4;
  string food_fat = 5;
  string food_carbs = 6;
  string food_protein = 7;
  string food_price = 8;
  string food_desc = 9;
  string food_status = 10;
}

message FoodList {
  repeated Food list = 1;
}

message Packet {
  string packet_id = 1;
  string packet_name = 2;
  string packet_price = 3;
  string packet_desc = 4;
  string packet_status = 5;
}

message PacketAndMenu {
  string pm_id = 1;
  string packet_id = 2;
  string menu_id = 3;
  string pm_status = 4;
}

message Transaction {
  string trans_id = 1;
  string trans_date = 2;
  string user_id = 3;
  string packet_id = 4;
  string portion = 5;
  string total_price = 6;
  string start_date = 7;
  string start_time = 8;
  string address = 9;
  string payment_id = 10;
  string trans_status = 11;
}

message TransactionList {
  repeated Transaction list = 1;
}

message Payment {
  string payment_id = 1;
  string payment_name = 2;
  string payment_status = 3;
}

message DetailPacket {
  Packet packet = 1;
  repeated Food list_food = 2;
}

message PacketList {
  repeated Packet list = 1;
}

message FoodID {
  string food_id = 1;
}

message DetailPacketInsert {
  Packet packet = 1;
  repeated string list_food = 2;
}

message ID {
  string id = 1;
}

message FoodUpdateRequest {
  ID id = 1;
  Food food = 2;
}

message DetailPacketUpdateRequest {
  ID id = 1;
  DetailPacketInsert packet = 2;
}

message TransactionUpdateRequest {
  ID id = 1;
  Transaction transaction = 2;
}

message Pagination {
  string page = 1;
  string limit = 2;
  string keyword = 3;
}

message Total {
  string total_data = 1;
}

service FoodCRUD {
  rpc GetAll(Pagination) returns (FoodList);
  rpc GetTotal(google.protobuf.Empty) returns (Total);
  rpc GetByID(ID) returns (Food);
  rpc Create(Food) returns (Food);
  rpc Update(FoodUpdateRequest) returns (Food);
  rpc Delete(ID) returns (google.protobuf.Empty);
}

service PacketCRUD {
  rpc GetAll(Pagination) returns (PacketList);
  rpc GetTotal(google.protobuf.Empty) returns (Total);
  rpc GetByID(ID) returns (DetailPacket);
  rpc Create(DetailPacketInsert) returns (DetailPacketInsert);
  rpc Update(DetailPacketUpdateRequest) returns (DetailPacketInsert);
  rpc Delete(ID) returns (google.protobuf.Empty);
}

service TransactionCRUD {
  rpc GetAll(Pagination) returns (TransactionList);
  rpc GetTotal(google.protobuf.Empty) returns (Total);
  rpc GetByTransID(ID) returns (Transaction);
  rpc GetByUserID(ID) returns (Transaction);
  rpc Create(Transaction) returns (Transaction);
  rpc Update(TransactionUpdateRequest) returns (Transaction);
  rpc Delete(ID) returns (google.protobuf.Empty);
}